/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/users/sign-in": {
    /**
     * Sign In
     * @description Sign in a user.
     */
    post: operations["users_api_sign_in"];
  };
  "/api/users/refresh": {
    /**
     * Refresh
     * @description Refreshes a token.
     */
    post: operations["users_api_refresh"];
  };
  "/api/actors/{actor_id}": {
    /**
     * Get Actor
     * @description Get an actor
     *     by reading yamls/cast/actors directory
     *     the id is the filename
     */
    get: operations["videocreator_routers_actors_get_actor"];
  };
  "/api/actors/": {
    /**
     * Get Actors
     * @description Get all actors
     * by reading yamls/cast/actors directory
     */
    get: operations["videocreator_routers_actors_get_actors"];
  };
  "/api/programs/{program_id}": {
    /**
     * Get Program
     * @description Get a program
     * by reading yamls/programs directory
     * the id is the filename
     */
    get: operations["videocreator_routers_programs_get_program"];
  };
  "/api/programs/": {
    /**
     * Get Programs
     * @description Get all programs
     * by reading yamls/programs directory
     */
    get: operations["videocreator_routers_programs_get_programs"];
  };
  "/api/projects/": {
    /**
     * Get Projects
     * @description Get all projects
     * by reading output/projects directory
     */
    get: operations["videocreator_routers_projects_get_projects"];
    /**
     * Create Project
     * @description Create a project
     * create a directory output/projects/{project_id}
     */
    post: operations["videocreator_routers_projects_create_project"];
  };
  "/api/projects/{project_id}": {
    /**
     * Get Project
     * @description Get a project
     * by reading output/projects/{project_id}
     */
    get: operations["videocreator_routers_projects_get_project"];
  };
  "/api/production_configs/{production_config_id}": {
    /**
     * Get Production Config
     * @description Get a production_config
     */
    get: operations["videocreator_routers_production_configs_get_production_config"];
  };
  "/api/production_configs/": {
    /**
     * Get Production Configs
     * @description Get all production_configs
     */
    get: operations["videocreator_routers_production_configs_get_production_configs"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * AICPSignInResult
     * @description Class encapsulating the sign in result for an AICP video.
     */
    AICPSignInResult: {
      user: components["schemas"]["AICPUser"];
      /** Access Token */
      access_token: string;
      /** Refresh Token */
      refresh_token: string;
    };
    /**
     * AICPUser
     * @description Class encapsulating the user for an AICP video.
     */
    AICPUser: {
      /** Id */
      id: string;
      /** Username */
      username: string;
      /** Email */
      email?: string | null;
    };
    /**
     * AICPSignInCredentials
     * @description Class encapsulating the sign in credentials for an AICP video.
     */
    AICPSignInCredentials: {
      /** Username */
      username: string;
      /** Password */
      password: string;
    };
    /**
     * AICPRefreshTokenResult
     * @description Class encapsulating the refresh token result for an AICP video.
     */
    AICPRefreshTokenResult: {
      /** Access Token */
      access_token: string;
      /** Refresh Token */
      refresh_token: string;
    };
    /**
     * AICPRefreshTokenRequest
     * @description Class encapsulating the refresh token request for an AICP video.
     */
    AICPRefreshTokenRequest: {
      /** Refresh Token */
      refresh_token: string;
    };
    /**
     * AICPActor
     * @description Class encapsulating the actor for an AICP video.
     */
    AICPActor: {
      /** Name */
      name: string;
      /** Bio */
      bio: string | null;
      /** Catch Phrase */
      catch_phrase: string | null;
      /** Physical Description */
      physical_description: string | null;
      /** Speaker */
      speaker: string;
      /**
       * Speaker Text Temp
       * @default 0.7
       */
      speaker_text_temp?: number;
      /**
       * Speaker Waveform Temp
       * @default 0.7
       */
      speaker_waveform_temp?: number;
    };
    /**
     * AICPProjectCreate
     * @description Class encapsulating the project for an AICP video.
     */
    AICPProjectCreate: {
      /** Name */
      name: string;
      /** Description */
      description?: string | null;
      /**
       * Actors
       * @default []
       */
      actors?: components["schemas"]["AICPActor"][];
      /** Seed */
      seed?: number;
      /** Program Id */
      program_id: string;
      /** Production Config Id */
      production_config_id: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Sign In
   * @description Sign in a user.
   */
  users_api_sign_in: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AICPSignInCredentials"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AICPSignInResult"];
        };
      };
    };
  };
  /**
   * Refresh
   * @description Refreshes a token.
   */
  users_api_refresh: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AICPRefreshTokenRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["AICPRefreshTokenResult"];
        };
      };
    };
  };
  /**
   * Get Actor
   * @description Get an actor
   *     by reading yamls/cast/actors directory
   *     the id is the filename
   */
  videocreator_routers_actors_get_actor: {
    parameters: {
      path: {
        actor_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Get Actors
   * @description Get all actors
   * by reading yamls/cast/actors directory
   */
  videocreator_routers_actors_get_actors: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Get Program
   * @description Get a program
   * by reading yamls/programs directory
   * the id is the filename
   */
  videocreator_routers_programs_get_program: {
    parameters: {
      path: {
        program_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Get Programs
   * @description Get all programs
   * by reading yamls/programs directory
   */
  videocreator_routers_programs_get_programs: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Get Projects
   * @description Get all projects
   * by reading output/projects directory
   */
  videocreator_routers_projects_get_projects: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Create Project
   * @description Create a project
   * create a directory output/projects/{project_id}
   */
  videocreator_routers_projects_create_project: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AICPProjectCreate"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Get Project
   * @description Get a project
   * by reading output/projects/{project_id}
   */
  videocreator_routers_projects_get_project: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Get Production Config
   * @description Get a production_config
   */
  videocreator_routers_production_configs_get_production_config: {
    parameters: {
      path: {
        production_config_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Get Production Configs
   * @description Get all production_configs
   */
  videocreator_routers_production_configs_get_production_configs: {
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
}
